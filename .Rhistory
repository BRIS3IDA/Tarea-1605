#ANOVA para DCL
nombre<-aov(desgaste~marca+posicion+auto, data=Ensamble)
#ANOVA para DCL
nombre<-aov( desgaste~marca+posicion+auto, data=Ensamble)
#ANOVA para DCL
nombre<-aov(desgaste~marca+posicion+auto, data=Ensamble)
#ANOVA para DCL
nombre<-aov(desgaste~marca+posicion+auto, data=Ensamble)
#ANOVA para DCL
nombre<-aov(desgaste~marca+posicion+auto, data=autos)
#ANOVA para DCL
nombre<-aov(desgaste~marca+posicion+auto, data=Autos)
summary(nombre) #muestra la tabla ANOVA
#COMPARACI?N DE MEDIAS
library(agricolae) #para que pueda correr LSD
#ANOVA para DCL
nombre<-aov(desgaste~marca+posicion+auto, data=Autos)
#ANOVA para DCL
nombre<-aov(desgaste~marca+posicion+auto, data=Autos)
summary(nombre) #muestra la tabla ANOVA
#COMPARACI?N DE MEDIAS
library(agricolae) #para que pueda correr LSD
library(Rcmdr)
#Dise?os factoriales
names(tequila) #Nombres correctos de las variables
str(basedatos)  #Tipo de las variables de la tabla
#cambiar las variables necesarias a factor.
basedatos$variable<- as.factor(basedatos$variable)
#Dise?os factoriales
names(tequila) #Nombres correctos de las variables
str(tequila)  #Tipo de las variables de la tabla
tequila$levadura<- as.factor(tequila$levadura)
tequila$temperatura<- as.factor(tequila$temperatura)
tequila$levadura<- as.factor(tequila$levadura)
tequila$temperatura<- as.factor(tequila$temperatura)
tequila$levadura<- as.factor(tequila$levadura)
tequila$temperatura<- as.factor(tequila$temperatura)
tequila$levadura<- as.factor(tequila$levadura)
tequila$temperatura<- as.factor(tequila$temperatura)
tequila$levadura<- as.factor(tequila$levadura)
tequila$temperatura<- as.factor(tequila$temperatura)
tequila$levadura<- as.factor(tequila$levadura)
tequila$temperatura<- as.factor(tequila$temperatura)
str(tequila)  #Tipo de las variables de la tabla
#Dise?os factoriales
names(tequila) #Nombres correctos de las variables
str(tequila)  #Tipo de las variables de la tabla
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(rendimiento~levadura+temperatura+levadura*temperatura, data=tequila)
summary(m1) #muestra la tabla ANOVA
#ANOVA SIN CONSIDERAR EL EFECTO DE INTERACCI?N
m2<-aov(respuesta~factor1+factor2, data=basedatos)
summary(nombre) #muestra la tabla ANOVA
#ANOVA SIN CONSIDERAR EL EFECTO DE INTERACCI?N
m2<-aov(respuesta~factor1+factor2, data=basedatos)
summary(m2) #muestra la tabla ANOVA
#Obtener las medias y desviaciones est?ndar de cada tratamiento.
library(car)
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(rendimiento~levadura+temperatura+levadura*temperatura, data=tequila)
summary(nombre) #muestra la tabla ANOVA
#ANOVA SIN CONSIDERAR EL EFECTO DE INTERACCI?N
m2<-aov(respuesta~factor1+factor2, data=basedatos)
summary(m2) #muestra la tabla ANOVA
#Obtener las medias y desviaciones est?ndar de cada tratamiento.
library(car)
Tapply(respuesta ~factor1+factor2, mean, na.action=na.omit, data=basedatos) # medias
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(rendimiento~levadura+temperatura+levadura*temperatura, data=tequila)
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(rendimiento~levadura+temperatura+levadura*temperatura, data=tequila)
#Dise?os factoriales
names(tequila) #Nombres correctos de las variables
str(tequila)  #Tipo de las variables de la tabla
#cambiar las variables necesarias a factor.
tequila$levadura<- as.factor(tequila$levadura)
tequila$temperatura<- as.factor(tequila$temperatura)
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(rendimiento~levadura+temperatura+levadura*temperatura, data=tequila)
summary(nombre) #muestra la tabla ANOVA
#Obtener las medias y desviaciones est?ndar de cada tratamiento.
library(car)
Tapply(rendimiento ~levadura+temperatura, mean, na.action=na.omit, data=tequila) # medias
Tapply(rendimiento ~levadura+temperatura, sd, na.action=na.omit, data=tequila) #desviaciones est?ndar
library(effects)
#Gr?fico de efectos principales
plot(Effect(c("levadura"), nombre))
plot(Effect(c("temperatura"), nombre))
#Gr?fico de interacci?n
Factor1<-basedatos$Factor1 #Renombrar a las variables para mostrar el nombre en el gr?fico
Factor2<-basedatos$Factor2
Respuesta<-basedatos$respuesta
#Gr?fico de efectos principales
plot(Effect(c("levadura"), nombre))
plot(Effect(c("temperatura"), nombre))
rendimiento<-$rendimiento
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(rendimiento~levadura+temperatura+levadura*temperatura, data=tequila)
#m1=nombre del modelo, rend=variable de respuesta, lev,tem=factores, data=base de datos
summary(nombre) #muestra la tabla ANOVA
#ANOVA SIN CONSIDERAR EL EFECTO DE INTERACCI?No lo consideramos
m2<-aov(respuesta~factor1+factor2, data=basedatos)
interaction.plot(tequila$levadura, tequila$temperatura,tequila$rendimiento)
interaction.plot(tequila$levadura, tequila$temperatura,tequila$rendimiento)
interaction.plot(levadura,temperatura,rendimiento)   #gr?fica de interacci?n
interaction.plot(levadura,temperatura,rendimiento)   #gr?fica de interacci?n
interaction.plot(levadura,temperatura,rendimiento)   #gr?fica de interacci?n
#Gr?fico de interacci?n
levadura<-tequila$levadura #Renombrar a las variables para mostrar el nombre en el gr?fico
temperatura<-tequila$temperatura
rendimiento<-$rendimiento
rendimiento<-tequila$rendimiento
interaction.plot(levadura,temperatura,rendimiento)   #gr?fica de interacci?n
summary(m2) #muestra la tabla ANOVA
interaction.plot(tequila$levadura, tequila$temperatura,tequila$rendimiento)
#Gr?fico de interacci?n
levadura<-tequila$levadura #Renombrar a las variables para mostrar el nombre en el gr?fico
temperatura<-tequila$temperatura
rendimiento<-tequila$rendimiento
interaction.plot(tequila$levadura, tequila$temperatura,tequila$rendimiento)
interaction.plot(temperatura,levadura,rendimiento)   #gr?fica de interacci?n
n
interaction.plot(temperatura,levadura,rendimiento)   #gr?fica de interacci?n
library(phia)
#Graf?co de efectos principales e interacci?n al mismo tiempo
library(phia)
Grafica <- interactionMeans(nombre)
plot(Grafica)
par(mfrow=c(1,1))
fitted(m1)#muestra las medias de cada tratamiento
fitted(nombre)#muestra las medias de cada tratamiento
library(agricolae)
#M?todo LSD SIN CONSIDERAR EL EFECTO  DE INTERACCI?N)
LSD.test(y=nombre, trt="temperatura", group=T, console=T)
#M?todo LSD SIN CONSIDERAR EL EFECTO  DE INTERACCI?N)
LSD.test(y=nombre, trt="levadura", group=T, console=T)
# Normalidad de residuos
shapiro.test(rstandard(nombre))
# Prueba de homocedasticidad o igualdad de varianzas
modelo1 <- lm(rendimiento ~levadura +temperatura+ levadura*temperatura, data=tequila)
library(car)
ncvTest(modelo)
#Prueba de independencia
library(lmtest)
dwtest(modelo)
plot(modelo$residuals)
# Prueba de homocedasticidad o igualdad de varianzas
m1 <- lm(rendimiento ~levadura +temperatura+ levadura*temperatura, data=tequila)
library(car)
ncvTest(modelo)
ncvTest(m1)
dwtest(modelo)
plot(modelo$residuals)
dwtest(m1)
dwtest(m1)
plot(modelo$residuals)
plot(m1$residuals)
#Dise?os factoriales
names(acabado) #Nombres correctos de las variables
str(acabado)  #Tipo de las variables de la tabla
str(acabado)  #Tipo de las variables de la tabla
#cambiar las variables necesarias a factor.
acabado$prof<- as.factor(acabado$prof)
acabado$vel<- as.factor(acabado$vel)
#cambiar las variables necesarias a factor.
acabado$prof<- as.factor(acabado$prof)
acabado$vel<- as.factor(acabado$vel)
str(acabado)  #Tipo de las variables de la tabla
summary(m1) #muestra la tabla ANOVA
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(y~prof+vel+prof*vel, data=acabado)
summary(m1) #muestra la tabla ANOVA
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(y~prof+vel+prof*vel, data=acabado)
summary(m1) #muestra la tabla ANOVA
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(y~prof+vel+prof*vel, data=acabado)
summary(m1) #muestra la tabla ANOVA
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(y~prof+vel+prof*vel, data=acabado)
summary(nombre) #muestra la tabla ANOVA
#ANOVA SIN CONSIDERAR EL EFECTO DE INTERACCI?N
m2<-aov(respuesta~factor1+factor2, data=basedatos)
#Dise?os factoriales
names(acabado) #Nombres correctos de las variables
str(acabado)  #Tipo de las variables de la tabla
#cambiar las variables necesarias a factor.
acabado$prof<- as.factor(acabado$prof)
acabado$vel<- as.factor(acabado$vel)
#ANOVA CONSIDERANDO LA INTERACCI?N DE LOS FACTORES
nombre<-aov(y~prof+vel+prof*vel, data=acabado)
summary(nombre) #muestra la tabla ANOVA
#Gr?fico de efectos principales
plot(Effect(c("prof"), nombre))
plot(Effect(c("vel"), nombre))
#Gr?fico de interacci?n
prof<-acabado$prof #Renombrar a las variables para mostrar el nombre en el gr?fico
vel<-acabado$vel
y<-acabado$y
interaction.plot(acabado$prof, acabado$vel,acabado$y)
interaction.plot(prof,vel,y)   #gr?fica de interacci?n
interaction.plot(vel,prof,y)   #gr?fica de interacci?n
library(Rcmdr)
library(RcmdrMisc)
#Diseño factorial con 3 factores
names(suspencion)#Nombre correcto de los variables
str(suspencion)]#Tipo de variables de la tabla
str(suspencion) #Tipo de variables de la tabla
modelo<-aov(y~(a+b+c)^3, data=suspencion
summary(modelo)
modelo<-aov(y~(a+b+c)^3, data=suspencion)
summary(modelo)
#cambiar las variables necesarias a factor
suspencion$a<-as.factor(suspencion$a)
suspencion$b<-as.factor(suspencion$b)
suspencion$c<-as.factor(suspencion$c)
modelo<-aov(y~(a+b+c)^3, data=suspencion)
summary(modelo)
#cambiar las variables necesarias a factor
suspencion$a<-as.factor(suspencion$a)
suspencion$b<-as.factor(suspencion$b)
suspencion$c<-as.factor(suspencion$c)
modelo<-aov(y~(a+b+c)^3-a*b*c, data=suspencion)
summary(modelo)
suspencion$c<-as.factor(suspencion$c)
modelo<-aov(y~(a+b+c)^3-a:b:c, data=suspencion)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-a:c, data=suspencion)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-a:c-a, data=suspencion)
summary(modelo)
library(phia)
Grafica <- interactionMeans(modelo)
plot(Grafica)
par(mfrow=c(1,1))
fitted(modelo)
#Diseño factorial con 3 factores
names(resistencia)#Nombre correcto de los variables
str(resistencia) #Tipo de variables de la tabla
#cambiar las variables necesarias a factor
suspencion$a<-as.factor(suspencion$a)
suspencion$b<-as.factor(suspencion$b)
suspencion$c<-as.factor(suspencion$c)
#Diseño factorial con 3 factores
names(resistencia)#Nombre correcto de los variables
str(resistencia) #Tipo de variables de la tabla
#cambiar las variables necesarias a factor
suspencion$a<-as.factor(resistencia$a)
suspencion$b<-as.factor(resistencia$b)
suspencion$c<-as.factor(resistencia$c)
modelo<-aov(y~(a+b+c)^3-a:b:c, data=suspencion)
summary(modelo)
#Diseño factorial con 3 factores
names(resistencia)#Nombre correcto de los variables
str(resistencia) #Tipo de variables de la tabla
#cambiar las variables necesarias a factor
suspencion$a<-as.factor(resistencia$a)
suspencion$b<-as.factor(resistencia$b)
suspencion$c<-as.factor(resistencia$c)
modelo<-aov(y~(a+b+c)^3-a:b:c, data=resistencia)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-b:c, data=resistencia)
summary(modelo)
str(resistencia) #Tipo de variables de la tabla
#Diseño factorial con 3 factores
names(resistencia)#Nombre correcto de los variables
str(resistencia) #Tipo de variables de la tabla
#cambiar las variables necesarias a factor
suspencion$a<-as.factor(resistencia$a)
suspencion$b<-as.factor(resistencia$b)
suspencion$c<-as.factor(resistencia$c)
modelo<-aov(y~(a+b+c)^3-a:b:c-b:c, data=resistencia)
summary(modelo)
#Diseño factorial con 3 factores
names(resistencia)#Nombre correcto de los variables
str(resistencia) #Tipo de variables de la tabla
#cambiar las variables necesarias a factor
suspencion$a<-as.factor(resistencia$a)
suspencion$b<-as.factor(resistencia$b)
suspencion$c<-as.factor(resistencia$c)
modelo<-aov(y~(a+b+c)^3-a:b:c, data=resistencia)
summary(modelo)
#Diseño factorial con 3 factores
names(resistencia)#Nombre correcto de los variables
str(resistencia) #Tipo de variables de la tabla
#cambiar las variables necesarias a factor
resistencia$a<-as.factor(resistencia$a)
resistencia$b<-as.factor(resistencia$b)
resistencia$c<-as.factor(resistencia$c)
modelo<-aov(y~(a+b+c)^3-a:b:c, data=resistencia)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-b:c, data=resistencia)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-b:c-c, data=resistencia)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-b:c, data=resistencia)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-b:c-c, data=resistencia)
summary(modelo)
modelo<-aov(y~(a+b+c)^3-a:b:c-b:c-c-a:c, data=resistencia)
summary(modelo)
setwd("D:/Bioinformatica")
mtcars
mean_cars <- \(mtcars) {
column_means <- list(); name <- c()
for (i in 1:ncol(mtcars)) {
if (class(mtcars[[i]]) %in% c('numeric', 'integer')) {
column_means[i] <- mean(mtcars[[i]])
name[i] <- i
}
}
names(column_means) <- colnames(mtcars)[name]
return(unlist(column_means))
}
mean_cars <-(mtcars) {
mean_cars <- \(mtcars) {
column_means <- list(); name <- c()
for (i in 1:ncol(mean_cars)) {
if (class(mean_cars[[i]]) %in% c('numeric', 'integer')) {
column_means[i] <- mean(mean_cars[[i]])
name[i] <- i
}
}
names(column_means) <- colnames(mean_cars)[name]
return(unlist(column_means))
}
mean_cars(mtcars)
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[i, ]
print(paste("The current row is:", toString(current_row)))
}
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[i, ]
print(paste("The current col is:", toString(current_ncol)))
}
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[,i]
print(paste("The current col is:", toString(current_ncol)))
}
for (i in seq_len(ncol(cars))) {
while (ncol>=0) {
current_ncol <- cars[,i]
}
print(paste("The current col is:", toString(current_ncol)))
}
for (i in seq_len(ncol(cars))) {
while (ncol=>0) {
promedio_cars <- colMeans(cars)
print(promedio_cars)
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
+     current_ncol <- cars[,i]
+     print(paste("The current col is:", toString(current_ncol)))
+ }
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
+     current_ncol <- cars[,i]
+     print(paste("The current col is:", toString(current_ncol)))
+ }
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[,i]
print(paste("The current col is:", toString(current_ncol)))
}
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[,i]
}
promedio_cars <- colMeans(cars) print(promedio_cars)
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[,i]
}
promedio_cars <- colMeans(cars)
print(promedio_cars)
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[,i]
promedio_cars <- colMeans(cars)
print(promedio_cars)}
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[,i]
}
promedio_cars <- colMeans(cars)
print(promedio_cars)
data <- as.matrix(mtcars)
heatmap(data)
heatmap(data, scale="column", col = terrain.colors(256))
heatmap(data, scale="column", col = cm.colors(256))
library(tidyverse)
PCA_cars<-prcomp(mtcars, scale=TRUE)
PCA_cars
resultados$ rotación<- -1*resultados$ rotación
PCA_cars$ rotación<- -1*PCA_cars$ rotación
PCA_cars$ rotación<- -1*PCA_cars$ rotación
PCA_cars$ rotación
$rotación
# Importar el paquete necesario para el PCA
library(stats)
library(stats)
pca_mtcars <- prcomp(mtcars, scale. = TRUE)
summary(pca_mtcars)
cargas <- pca_mtcars$rotation
coordenadas <- pca_mtcars$x
print("Cargas de los componentes principales:")
print(cargas)
print("Coordenadas de las observaciones en el espacio de componentes principales:")
print(coordenadas)
library(tidyverse)
PCA_cars<-prcomp(mtcars, scale=TRUE)
PCA_cars
library(stats)
pca_mtcars <- prcomp(mtcars, scale. = TRUE)
summary(pca_mtcars)
cargas <- pca_mtcars$rotation
coordenadas <- pca_mtcars$x
print("Cargas de los componentes principales:")
print(cargas)
print("Coordenadas de los componentes principales:")
print(coordenadas)
load("E:/Bioinformatica/Clase 1605/.RData")
cars <- data.frame(mtcars)
for (i in seq_len(ncol(cars))) {
current_ncol <- cars[,i]
}
promedio_cars <- colMeans(cars)
print(promedio_cars)
data <- as.matrix(mtcars)
heatmap(data)
heatmap(data, scale="column", col = cm.colors(256))
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
PCA_cars<-prcomp(mtcars, scale=TRUE)
PCA_cars
library(stats)
pca_mtcars <- prcomp(mtcars, scale. = TRUE)
summary(pca_mtcars)
cargas <- pca_mtcars$rotation
coordenadas <- pca_mtcars$x
print("Cargas de los componentes principales:")
print(cargas)
print("Coordenadas de los componentes principales:")
print(coordenadas)
mtcars
View(mean_cars)
vector1 <- df$mpg
CORmtcars <- a_caracteres(df = mtcars, columnas = 1:3
mtcars <- a_caracteres(df = mtcars, columnas = 1:3)
mtcars <- a_cero(df = mtcars, columnas = 1:3)
mtcars <- a_nas(df = mtcars, columnas = 1:3)
mtcars <- a_numeros(df = mtcars, columnas = 1:3)
mtcars <- formatear_num(df = mtcars, columnas = 1:3)
stringr
mtcars <- stringr(df = mtcars, columnas = 1:3)
mtcars <- apply(df = mtcars, columnas = 1:3)
mtcars
CORmtcars <- apply(df = mtcars, columnas = 1:3)
CORmtcars
CORmtcars <- apply(df = mtcars, columnas = 1:3)
CORmtcars <- a_character(df = mtcars, columns = 1:3)
CORmtcars <- a_chars(df = mtcars, columns = c("hp", "wt", "am"))
mtcars <- a_characters(df = mtcars, columns = c("hp", "wt", "am"))
a_caracteres <- function(df, columnas) {
for (col in columnas) {
df[[col]] <- as.character(df[[col]])
}
return(df)
}
mtcars <- a_caracteres(df = mtcars, columnas = c("hp", "wt", "am"))
CORmtcars <- a_caracteres(df = mtcars, columnas = c("hp", "wt", "am"))
pairs(hp ~ wt)
correlation_matrix <- cor(mtcars[, c("hp", "wt", "am")])
a_caracteres <- function(df, columnas) {
for (col in columnas) {
df[[col]] <- as.numeric(df[[col]])
}
return(df)
}
a_num <- function(df, columnas) {
for (col in columnas) {
df[[col]] <- as.numeric(df[[col]])
}
return(df)
}
mtcars <- a_num(df = mtcars, columnas = c("hp", "wt", "am"))
CORmtcars <- a_num(df = mtcars, columnas = c("hp", "wt", "am"))
COR <- cor(mtcars[, c("hp", "wt", "am")])
library(corrplot)
install.packages(corrplot)
install.packages('corrplot')
corrplot(correlation_matrix, method = "circle", type = "lower", tl.col = "black", tl.srt = 45)
library(corrplot)
corrplot(correlation_matrix, method = "circle", type = "lower", tl.col = "black", tl.srt = 45)
corrplot(COR, method = "circle", type = "lower", tl.col = "black", tl.srt = 45)
a_num <- function(df, columnas) {
for (col in columnas) {
df[[col]] <- as.numeric(df[[col]])
}
return(df)
}
mtcars <- a_num(df = mtcars, columnas = c("hp", "wt", "am"))
CORmtcars <- a_num(df = mtcars, columnas = c("hp", "wt", "am"))
COR <- cor(mtcars[, c("hp", "wt", "am")])
#install.packages('corrplot')
corrplot(COR, method = "circle", type = "lower", tl.col = "black", tl.srt = 45)
modelo_anova <- aov(mpg ~ nombre, data = mtcars)
modelo_anova <- aov(mpg ~ cyl, data = mtcars)
summary(modelo_anova)
